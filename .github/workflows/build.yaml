name: Build
permissions:
    contents: write
on:
  push:
    # tags:
    #   - 'v*' 
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      dev: ${{contains(github.ref_name,'dev')}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      # - name: Install git-chglog
      #   run: |
      #     go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
      # - name: Generate Changelog
      #   run: |
      #     git-chglog -o RELEASE.md ${{github.ref_name}}
      # - name: Update Changelog
      #   if: ${{ env.dev == 'false' }}
      #   run: |
      #     if ! grep -Fq "[${{github.ref_name}}]" CHANGELOG.md;then
      #       cat RELEASE.md CHANGELOG.md > CHANGELOG.NEW.md || true
      #       mv CHANGELOG.NEW.md CHANGELOG.md
      #       git add CHANGELOG.md
      #       if ! git diff --cached --quiet;then
      #         git config user.name "github-actions[bot]"
      #         git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #         git commit -m "更新 CHANGELOG.md"
      #         git push origin main
      #       fi
      #     fi
      - uses: docker/setup-buildx-action@v2
      - name: Cache Apk Data
        uses: actions/cache@v3
        with:
          path: /tmp/var-lib-apk
          key: var-lib-apk-${{ hashFiles('Dockerfile') }}
      - name: Mount Apk Cache
        uses: reproducible-containers/buildkit-cache-dance@v2.1.2
        with:
          cache-source: /tmp/var-cache-apk
          cache-target: /var/cache/apk
      - name: Cache Go mod
        uses: actions/cache@v3
        with:
          path: /tmp/go-mod
          key: go-mod-${{ hashFiles('go.mod') }}
      - name: Mount Go Cache
        uses: reproducible-containers/buildkit-cache-dance@v2.1.2
        with:
          cache-source: /tmp/go-mod
          cache-target: /go/pkg/mod
      - name: Build ll-killer-go
        run: |
          docker buildx build --platform linux/arm64,linux/amd64 -f Dockerfile . -o /tmp/build --cache-from=type=gha --cache-to=type=gha,mode=max
          docker buildx build --platform linux/loong64 -f Dockerfile . -o /tmp/build --cache-from=type=gha --cache-to=type=gha,mode=max \
                              --build-arg XX_TRIPLE=loongarch64-alpine-linux-musl \
                              --build-arg XX_ALPINE_ARCH=loongarch64
          mv /tmp/build/linux_amd64/ll-killer ll-killer-amd64
          mv /tmp/build/linux_arm64/ll-killer ll-killer-arm64
          mv /tmp/build/ll-killer ll-killer-loong64
          sha1sum ll-killer-* >ll-killer.sha1sum
          
          XDASH='```'
          cat >> RELEASE.md <<EOF
          ## SHA1哈希值
          $XDASH
          $(cat ll-killer.sha1sum)
          $XDASH
          EOF
      - name: Verify
        run: |
          file ll-killer-*
      # - name: Upload release assets
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     prerelease: ${{env.dev}}
      #     body_path: ./RELEASE.md
      #     files: |
      #       ./ll-killer-*
      #       ./ll-killer.sha1sum
